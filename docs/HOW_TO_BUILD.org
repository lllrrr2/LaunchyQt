
* How to build

** Windows
*** Environments
VS2017
Qt5.12.10
Python3.6.6 64-bit
PySide2 5.12.6 (the lastest version for Qt5.12)
CMake3.15 or higher version
Tips:
1. If you wants to build 64-bit Launchy, 64-bit Python is required.
2. If you wants to debug Launchy python, debug version of python is required.

*** Configuartion
These steps is intended to help cmake locate Qt.
Set =CMAKE_PREFIX_PATH= as Qt install directory, it is =C:/Qt/Qt5.12.10/5.12.10/msvc2017_64= by default.

*** Build
1. Generate VS2017 solution with cmake
#+BEGIN_SRC bat
cmake -B build .
#+END_SRC

2. Open solution with VS2017 and build



** (obsolete) Windows with Qt Creator
*** Environments
- Visual Studio Community 2017
- Qt 5.12.5
- Python 3.6.7 (32-bit)
Tips: If you wants to build 64-bit Launchy, 64-bit Python is required.

*** Configuration
1. Add =PYTHONPATH= in user environment variables, the value should be the path that you installed python.

*** Build and Debug
Now open =src.pro= with Qt Creator, you can build and debug Launchy.
There are the tips:
1. If you want to build a debug version, you need to download the python debug version library. As python installer only contains release version library by default.
2. I have not try other Qt and Python version, if you already have other similar versions installed, try them first and you maight save the time for reinstalling develop environments.

** (obsolete) Windows with Visual Studio 2015
*** Environments
Here is what I am using for development and release build.
- Visual Studio Community 2015 ([[https://my.visualstudio.com/Downloads?q=visual%2520studio%25202015&wt.mc_id=o~msft~vscom~older-downloads][download page]])
- Qt5.11.1 ([[https://download.qt.io/archive/qt/5.11/5.11.1/][download page]])
- Qt-VS-addin msvc2015 ([[https://download.qt.io/official_releases/vsaddin/][downlaod page]])
- Python3.6.7 ([[https://www.python.org/downloads/release/python-367/][download page]])

*** Configuration
After you have all the above installed, you need to:
1. Configure qt-vs-addin to the qt path. I recommend to set name to =Qt5.11.1x64= in the Qt Version panel(and =Qt5.11.1x86= if you want to build a win32 version), because this name will be stored in "Launchy.sln". This [[http://doc.qt.io/archives/vs-addin/vs-addin-managing-projects.html][qt official manual]] maight help.
2. Change launchy solution's Qt version to what you have just configured in step 1.
3. Add =PYTHONPATH= in user environment variables (and =PYTHONPATH32= if you want to build a win32 version), the value should be the path that you installed python.

*** Build and debug
Now you can build and debug Launchy. There are the tips:
1. You should build in =Release= configuration.
2. Even when you are debugging, you should still use release configuration, because we have installed python in release, [[https://docs.microsoft.com/en-us/visualstudio/python/working-with-c-cpp-python-in-visual-studio?view=vs-2017][this page]] have more detailed information about VS working with python.
3. When debugging in release configuration, you may encounter "unwanted fast jumps" when stepping the code, this is because of compile optimization, and you can turn it off temporary in project property panel.
